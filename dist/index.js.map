{"version":3,"sources":["../src/index.ts","../package.json"],"sourcesContent":["import { version } from '../package.json';\n\ntype MandatoryField = {\n    name: string;\n    optional?: false;\n}\ntype OptionalField = {\n    name: string;\n    optional: true;\n}\ntype Field = MandatoryField | OptionalField;\n\ntype DateField = {\n    type: 'date';\n} & Field;\n\ntype DateTimeField = {\n    type: 'datetime';\n} & Field;\n\ntype DurationField = {\n    type: 'duration';\n    time_unit: 'milliseconds' | 'seconds' | 'minutes' | 'hours';\n} & Field;\n\ntype CurrencyCode = 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BOV' | 'BRL' | 'BSD' | 'BTN' | 'BWP' | 'BYN' | 'BZD' | 'CAD' | 'CDF' | 'CHE' | 'CHF' | 'CHW' | 'CLF' | 'CLP' | 'COP' | 'COU' | 'CRC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MXV' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'CNY' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLE' | 'SLL' | 'SOS' | 'SRD' | 'SSP' | 'STN' | 'SVC' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'USD' | 'USN' | 'UYI' | 'UYU' | 'UYW' | 'UZS' | 'VED' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XAG' | 'XAU' | 'XBA' | 'XBB' | 'XBC' | 'XBD' | 'XCD' | 'XDR' | 'XOF' | 'XPD' | 'XPF' | 'XPT' | 'XSU' | 'XTS' | 'XUA' | 'XXX' | 'YER' | 'ZAR' | 'ZMW' | 'ZWL'\ntype MoneyField = {\n    type: 'money';\n    currency_code: CurrencyCode;\n} & Field;\n\ntype NumberField = {\n    type: 'number';\n} & Field;\n\ntype PercentageField = {\n    type: 'percentage';\n} & Field;\n\ntype StringField = {\n    type: 'string';\n} & Field;\n\ntype Fields = Record<string, DateField | DateTimeField | DurationField | MoneyField | NumberField | PercentageField | StringField>\n\ntype KeysMatching<T, V> = { [K in keyof T]-?: T[K] extends V ? K : never }[keyof T];\n\ntype Schema<T extends Fields> = {\n    id: string;\n    fields: T;\n    uniqueBy: Array<KeysMatching<T, StringField | DateField>>;\n}\n\ntype FieldType<T> = T extends DateField\n    ? string\n    : T extends DateTimeField\n    ? string\n    : T extends DurationField\n    ? number\n    : T extends MoneyField\n    ? number\n    : T extends NumberField\n    ? number\n    : T extends PercentageField\n    ? number\n    : T extends StringField\n    ? string\n    : never;\n\ntype IsOptional<K extends keyof F, F extends Fields> = F[K] extends OptionalField ? K : never;\ntype IsRequired<K extends keyof F, F extends Fields> = F[K] extends OptionalField ? never : K;\n\ntype DatasetDataItem<F extends Fields> = {\n    [K in keyof F as IsRequired<K, F>]: FieldType<F[K]>;\n} & {\n        [K in keyof F as IsOptional<K, F>]?: FieldType<F[K]>;\n    }\n\nclass Dataset<T extends Fields> {\n    // can we get these directly from the schema?\n    id: string;\n    fields: T;\n    uniqueBy: Array<KeysMatching<T, StringField | DateField>>;\n\n    constructor(schema: Schema<T>) {\n        this.id = schema.id;\n        this.fields = schema.fields;\n        this.uniqueBy = schema.uniqueBy;\n    }\n\n    create(): Promise<Schema<T>> {\n        const { id, fields, uniqueBy } = this;\n        return Promise.resolve({ id, fields, uniqueBy });\n    }\n\n    post(items: DatasetDataItem<T>[], deleteBy?: keyof T): Promise<void> {\n        console.log({ items, deleteBy })\n        return Promise.resolve();\n    }\n\n    put(items: DatasetDataItem<T>[]): Promise<void> {\n        console.log({ items })\n        return Promise.resolve();\n    }\n\n    delete(): Promise<void> {\n        return Promise.resolve();\n    }\n}\n\nclass Geckoboard {\n    apiKey: string;\n    version: string;\n\n    constructor(apiKey: string) {\n        this.apiKey = apiKey;\n        this.version = version;\n    }\n\n    defineDataset<T extends Fields>(schema: { id: string, fields: T, uniqueBy: Schema<T>['uniqueBy'] }): Dataset<T> {\n        return new Dataset(schema);\n    }\n\n    ping(): Promise<void> {\n        return Promise.resolve();\n    }\n}\n\nexport default Geckoboard;","{\n  \"name\": \"geckoboard\",\n  \"version\": \"2.0.0\",\n  \"description\": \"\",\n  \"main\": \"dist/index.js\",\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"test\": \"jest\",\n    \"lint\": \"eslint src --ext .ts\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/geckoboard/geckoboard-node.git\"\n  },\n  \"keywords\": [\n    \"geckoboard\",\n    \"node\",\n    \"javascript\"\n  ],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/geckoboard/geckoboard-node/issues\"\n  },\n  \"homepage\": \"https://developer-beta.geckoboard.com/js\",\n  \"devDependencies\": {\n    \"@types/jest\": \"^29.5.8\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.10.0\",\n    \"@typescript-eslint/parser\": \"^6.10.0\",\n    \"eslint\": \"^8.53.0\",\n    \"jest\": \"^29.7.0\",\n    \"nock\": \"^8.0.0\",\n    \"ts-jest\": \"^29.1.1\",\n    \"ts-node\": \"^10.9.1\",\n    \"tsup\": \"^7.2.0\",\n    \"typescript\": \"^5.2.2\"\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEE,cAAW;;;AD4Eb,IAAM,UAAN,MAAgC;AAAA,EAM5B,YAAY,QAAmB;AAC3B,SAAK,KAAK,OAAO;AACjB,SAAK,SAAS,OAAO;AACrB,SAAK,WAAW,OAAO;AAAA,EAC3B;AAAA,EAEA,SAA6B;AACzB,UAAM,EAAE,IAAI,QAAQ,SAAS,IAAI;AACjC,WAAO,QAAQ,QAAQ,EAAE,IAAI,QAAQ,SAAS,CAAC;AAAA,EACnD;AAAA,EAEA,KAAK,OAA6B,UAAmC;AACjE,YAAQ,IAAI,EAAE,OAAO,SAAS,CAAC;AAC/B,WAAO,QAAQ,QAAQ;AAAA,EAC3B;AAAA,EAEA,IAAI,OAA4C;AAC5C,YAAQ,IAAI,EAAE,MAAM,CAAC;AACrB,WAAO,QAAQ,QAAQ;AAAA,EAC3B;AAAA,EAEA,SAAwB;AACpB,WAAO,QAAQ,QAAQ;AAAA,EAC3B;AACJ;AAEA,IAAM,aAAN,MAAiB;AAAA,EAIb,YAAY,QAAgB;AACxB,SAAK,SAAS;AACd,SAAK,UAAU;AAAA,EACnB;AAAA,EAEA,cAAgC,QAAgF;AAC5G,WAAO,IAAI,QAAQ,MAAM;AAAA,EAC7B;AAAA,EAEA,OAAsB;AAClB,WAAO,QAAQ,QAAQ;AAAA,EAC3B;AACJ;AAEA,IAAO,cAAQ;","names":[]}